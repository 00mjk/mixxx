#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os

# machine-system settings we support
#
# iX86-mingw32-
# iX86-apple-darwin9
# x86_64-apple-darwin9
# powerpc-apple-darwin9
# poperpc64-apple-darwin9
# iX86-linux-gnu
# x86_64-linux-gnu

# platform = [win, osx, bsd, linux]
# machine = [iX86, x86_64, powerpc, powerpc64]
# toolchain = [gnu, msvc]
# target = [debug, release]

# if you don't specify your platform, we autodetect platform/machine  using python
# if you don't specify your machine then we pick iX86 by default
# default toolchain: gnu
# default build: debug

import logging
logging.getLogger().setLevel(logging.DEBUG)

from build import mixxx
target = ARGUMENTS.get('target', None)
machine = ARGUMENTS.get('machine', None)
build_type = ARGUMENTS.get('build', None)
toolchain = ARGUMENTS.get('toolchain', None)

build = mixxx.MixxxBuild(target, machine, build_type, toolchain)
Export('build')

#Run our configuration stuff to setup our build environment (detect platform/arch, find libraries, etc)
SConscript(File('src/SConscript.env'), duplicate=0)

#Grab some variables, created by SConscript.env, that we'll need to do the rest of the build
#and installation.
Import('sources', 'flags')
Import('build_dir')

# Make the main src directory accessible to the SoundSourceM4A, so
# SoundSourceM4A can get at sounddevice.cpp, which it needs to build
# and link properly. This sucks but it's the best way I can find -- bkgood
VariantDir("plugins/soundsourcem4a", "src", duplicate=0)
VariantDir("plugins/soundsourcewv", "src", duplicate=0)
#Build our soundsource plugins
soundsource_plugins = SConscript(File('plugins/SConscript'), build_dir=Dir(build_dir + "/plugins"), duplicate=0, exports=['build', 'flags'])

#Setup and build the "mixxx" executable target. Also sets up our install targets for each platform.
SConscript(File('src/SConscript'), build_dir=Dir(build_dir), duplicate=0, exports=['build', 'sources', 'flags', 'soundsource_plugins'])


#Conveniece - Copy over the Mixxx executable out of the build directory and into the bottom of the source
#             tree. (That should be the directory where you run "scons".)
#wtf doesn't this work on win32 (works on Linux, OS X):
Command("mixxx", os.path.join(build_dir, "mixxx"), Copy("$TARGET", "$SOURCE"))
#hack for windows:
Copy("mixxx", os.path.join(build_dir, "mixxx"))

#On OS X, if the bundle has been built, copy it up:
#Command("Mixxx.app", os.path.join(build_dir, "Mixxx.app"), Copy("$TARGET", "$SOURCE"))
