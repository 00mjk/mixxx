
#************************************************************************
# Qmake deps script
# version 0.4
# Copyright (c) 2003 Gianluca Romanin ( J_Zar )  <jayorama@users.sourceforge.net>
#************************************************************************


#************************************************************************
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
#************************************************************************



# *************************************************  README
#  This script is the main script for defining our needs. The programmer should
#  repeat the basical block (BBLOCK) for each library or program to be checked.
#  Every block marked with (TOUCH!) must be carefully configured by programmer,
#  while blocks marked with (DON'T TOUCH!) is worthy not to dealt with if you don't
#  know what you are doing ...
#  The check system use for libraries, at first, "ld" linker and, if it fails, an "exists" instance.
#
#  Let's see the basical block (BBLOCK):
#
#   Note: yoy must define the OBJ_TYPE variable to "lib" if you are checking a lib.
#   So script will look in LIB_BASE0 / LIB_BASE1/LIB_BASE2 paths.
#   Else set it to "bin" ( and look in BIN_BASE0 / BIN_BASE1 ) or
#   "other" ( and look in OPTIONAL_BASE0 / OPTIONAL_BASE1 / OPTIONAL_BASE2 )...
#   The core of the check routine is coded in "check.depend" with general abstraction.
#
#   YOURPROGRAM -----------------------------------------------
#   These fileds have to be filled by the programmer   (TOUCH!)
# OBJ_TO_TEST = yourprogram
# OBJ_TYPE = lib        <--- 3 types: "lib | bin | other". Each one has different check code.
# EXIT_IF_NOT_FOUND = true         <--- Exits if we don't find OBJ_TO_TEST
# TIP_MESSAGE_IF_NOT_FOUND = "Message!"        <--- If not found we can print a tip message to warn the user
# LINK_IF_FOUND = true        <--- tells the script to link or not LIBS_TO_LINK if we found it
# LIBS_TO_LINK =  -lYOURPROGRAM           <--- absolutely needed for a correct check (also if you plan not to use it)!
#                                                                                  If not so ... "ld" check will be bypassed!
# DEFINES_TO_ADD =            <--- only if found
# SOURCES_TO_ADD =            <--- only if found
# HEADERS_TO_ADD =            <--- only if found
# CONFIG_TO_ADD =             <--- only if found
# LIBS_TO_UNLINK =            <--- only if not found
# DEFINES_TO_SUBTRACT =            <--- only if found
# SOURCES_TO_SUBTRACT =            <--- only if found
# HEADERS_TO_SUBTRACT =            <--- only if found
# CONFIG_TO_SUBTRACT =             <--- only if found
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
# include( check.depend )
# --------------------------------------------------
#
# end of (BBLOCK)

# --------------------------------------------------
# Header         (DON'T TOUCH!)
include( header.depend )
# --------------------------------------------------





# static linking means excluding tests (except for Jack)
!count(LINLIBPATH, 1) {

# ************************************************* BODY


#   QT thread -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = lib/libqt-mt
OBJ_TYPE = other
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "Your QT system has been build without '-thread' option! Mixxx needs QT threads!"
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD = thread
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   GLIB -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libglib
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND =
LINK_IF_FOUND = false
LIBS_TO_LINK = -lglib
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   MAD -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libmad
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "The Mad decoder is needed for mp3 playback!"
LINK_IF_FOUND = true
LIBS_TO_LINK = -lmad
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   ID3TAG -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libid3
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "Id3tag library needed!"
LINK_IF_FOUND = true
LIBS_TO_LINK = -lid3tag
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   AUDIOFILE -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libaudiofile
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "AudioFile is needed for the Mixxx playback engine!"
LINK_IF_FOUND = true
LIBS_TO_LINK = -laudiofile
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   OGG/VORBIS -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libvorbis
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "Vorbis library is needed for ogg playback!"
LINK_IF_FOUND = true
LIBS_TO_LINK = -lvorbisfile -lvorbis -logg
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   FFTW HEADERS (s)-----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = sfftw.h
OBJ_TYPE = other
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "FFTW 2 headers needed for the Mixxx playback engine!"
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   FFTW HEADERS (sr)-----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = srfftw.h
OBJ_TYPE = other
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "FFTW 2 headers needed for the Mixxx playback engine!"
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   FFTW -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libsfftw
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "FFTW 2 package is needed for the Mixxx playback engine!"
LINK_IF_FOUND = true
LIBS_TO_LINK = -lsrfftw -lsfftw
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   SNDFILE -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libsndfile
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND =
LINK_IF_FOUND = false   # link only if Win OS
LIBS_TO_LINK = -lsndfile
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------

# end LINLIBPATH code check
}


#   ALSA HEADERS -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = alsa/asoundlib.h
OBJ_TYPE = other
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND =
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   ALSA LIBRARY -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libasound
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND =
LINK_IF_FOUND = false # true
LIBS_TO_LINK = -lasound
DEFINES_TO_ADD = # __ALSA__  __ALSAMIDI__
SOURCES_TO_ADD = # playeralsa.cpp  midiobjectalsa.cpp
HEADERS_TO_ADD = # playeralsa.h  midiobjectalsa.h
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   PKG-CONFIG -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = pkg-config
OBJ_TYPE = bin
EXIT_IF_NOT_FOUND = true
TIP_MESSAGE_IF_NOT_FOUND = "pkg-config is needed for Jack correct check and for its configuration!"
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   JACK HEADERS -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = jack/jack.h
OBJ_TYPE = other
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND = "Jack headers needed to compile with Jack support!"
LINK_IF_FOUND = false
LIBS_TO_LINK =
DEFINES_TO_ADD =
SOURCES_TO_ADD =
HEADERS_TO_ADD =
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------



#   JACK -----------------------------------------------
# These fileds have to be filled by the programmer   (TOUCH!)
OBJ_TO_TEST = libjack
OBJ_TYPE = lib
EXIT_IF_NOT_FOUND = false
TIP_MESSAGE_IF_NOT_FOUND =
LINK_IF_FOUND = false #true
LIBS_TO_LINK = `pkg-config --silence-errors --cflags --libs jack`
DEFINES_TO_ADD = #__JACK__
SOURCES_TO_ADD = #playerjack.cpp
HEADERS_TO_ADD = #playerjack.h
CONFIG_TO_ADD =
LIBS_TO_UNLINK =
DEFINES_TO_SUBTRACT =
SOURCES_TO_SUBTRACT =
HEADERS_TO_SUBTRACT =
CONFIG_TO_SUBTRACT =
# --------------------------------------------------
# Check routines         (DON'T TOUCH!)
include( check.depend )
# --------------------------------------------------





# --------------------------------------------------
# Footer         (DON'T TOUCH!)
include( footer.depend )
# --------------------------------------------------