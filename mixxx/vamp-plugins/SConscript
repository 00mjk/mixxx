#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import sys
import SCons
import shutil

Import('build')


mixxxminimal_sources = [
	"#lib/soundtouch-1.5.0/FIFOSampleBuffer.cpp",
	"#lib/soundtouch-1.5.0/PeakFinder.cpp",
	"#lib/soundtouch-1.5.0/BPMDetect.cpp",    
	"#lib/vamp/src/vamp-sdk/PluginAdapter.cpp",
	"#lib/vamp/src/vamp-sdk/RealTime.cpp",
	"dsp/ChangeDetectionFunction.cpp",  
	"dsp/DownBeat.cpp",       
	"dsp/PeakPicking.cpp",
	"dsp/Chromagram.cpp",               
	"dsp/FFT.cpp",           
	"dsp/PhaseVocoder.cpp",
	"dsp/ConstantQ.cpp",                
	"dsp/Filter.cpp",         
	"dsp/Pitch.cpp",
	"dsp/Correlation.cpp",              
	"dsp/FiltFilt.cpp",       
	"dsp/TCSgram.cpp",
	"dsp/CQprecalc.cpp",                
	"dsp/Framer.cpp",         
	"dsp/TempoTrack.cpp",
	"dsp/Decimator.cpp",               
	"dsp/GetKeyMode.cpp",     
	"dsp/TempoTrackV2.cpp",
	"dsp/DetectionFunction.cpp",        
	"dsp/KLDivergence.cpp",   
	"dsp/TonalEstimator.cpp",
	"dsp/DFProcess.cpp",                
	"dsp/MathUtilities.cpp",
	"plugins/BarBeatTrack.cpp",  
	"plugins/KeyDetect.cpp",          
	"plugins/replaygain.cpp",
	"plugins/BeatTrack.cpp",
	"plugins/MixxxBpmDetection.cpp",  
	"plugins/TonalChangeDetect.cpp",
	"libmain.cpp",
	"#src/mathstuff.cpp",
]


#Tell SCons to build the plugin
#=========================
if int(build.flags['Vamp']):
	
    env = build.env.Clone()
    conf = Configure(env)
    env = conf.Finish()
    if build.platform_is_windows:
        env["LINKFLAGS"].remove("/entry:mainCRTStartup")
        env["LINKFLAGS"].remove("/subsystem:windows")
        mixxxminimal_bin = env.SharedLibrary('libmixxxminimal', mixxxminimal_sources)
    else:
        mixxxminimal_bin = env.SharedLibrary('mixxxminimal', mixxxminimal_sources)
    

    #Pass this library object file back to the SConscript above us.
    Return("mixxxminimal_bin")
else:
    Return("")



